def update():
    arquivo = str(input("Digite o nome do arquivo: "))
    try:
        with open(f"{arquivo}.txt", "r", encoding="utf8") as file:
            conteudo = file.readlines()

        with open(f"{arquivo}.txt", "w", encoding="utf8") as file:
            file.close()
            edit = str(input("Digite o nome do treino que deseja editar: "))
            print("""
            ---menu de atualização---")
                1-nome
                2-datas
                3-localização
                4-distância
                5-clima
                6-tempo""")
            atualizacao=int(input("Digite de acordo com o menu o que você deseja atualizar: "))
            if atualizacao==1:
                novonome = str(input("Digite o nome: "))
            
                for i in range(len(conteudo)):
                    if "Nome: " in conteudo[i]:
                        conteudo[i] = f"Nome: {novonome}\n"

            elif atualizacao==2:
                novodata = str(input("Digite a data: "))


                for i in range(len(conteudo)):
                    if "Data: " in conteudo[i]:
                        conteudo[i] = f"Data: {novodata}\n"

            elif atualizacao==3:
                novoloc = str(input("Digite a localização: "))

                for i in range(len(conteudo)):
                    if "Localizacão: " in conteudo[i]:
                        conteudo[i] = f"Localizacão: {novoloc}\n"

            elif atualizacao==4:
                novodistc = str(input("Digite a distância: "))

                for i in range(len(conteudo)):
                    if "Distância: " in conteudo[i]:
                        conteudo[i] = f"Distância: {novoloc}\n"
            elif atualizacao==5:
                novoclima = str(input("Digite o clima: "))

                for i in range(len(conteudo)):
                    if "Clima: " in conteudo[i]:
                        conteudo[i] = f"Clima: {novoloc}\n"
            elif atualizacao==6:
                novotempo = str(input("Digite o tempo: "))

                for i in range(len(conteudo)):
                    if "Tempo: " in conteudo[i]:
                        conteudo[i] = f"Tempo: {novotempo}\n"
            
            file.close()

        with open(f"{arquivo}.txt", "w", encoding="utf-8") as file:
            file.writelines(conteudo)

    except FileNotFoundError:
        print("Erro: O arquivo não foi encontrado.")
        return
    except Exception as e:
        print(f"Ocorreu um erro ao ler o arquivo: {e}")
        return

def deletar():
    arquivo = str(input("Digite o nome do arquivo (sem .txt) que você deseja excluir: "))
    try:
        if os.path.exists(f"{arquivo}.txt"):
            os.remove(f"{arquivo}.txt")  
            print(f"Arquivo '{arquivo}.txt' excluído com sucesso!")
        else:
            print(f"Erro: O arquivo '{arquivo}.txt' não foi encontrado.")
    except Exception as e:
        print(f"Ocorreu um erro ao tentar excluir o arquivo: {e}")

def filtrar_treinos(tempo_min=None, tempo_max=None, distancia_min=None, distancia_max=None):
    try:
        arquivos = [f for f in os.listdir() if f.endswith('.txt')]
        treinos_filtrados = []
        
        for arquivo in arquivos:
            with open(arquivo, 'r', encoding='utf8') as file:
                treino = file.readlines()
                tempo = None
                distancia = None
                
                for linha in treino:
                    if 'Tempo: ' in linha:
                        tempo = float(linha.split(":")[1].strip())  
                    if 'Distância: ' in linha:
                        distancia = float(linha.split(":")[1].strip()) 

                if tempo and distancia:
                    if (tempo_min is None or tempo >= tempo_min) and (tempo_max is None or tempo <= tempo_max) and \
                        (distancia_min is None or distancia >= distancia_min) and (distancia_max is None or distancia <= distancia_max):
                        treinos_filtrados.append(arquivo)

        if treinos_filtrados:
            print("\nTreinos filtrados encontrados:")
            for treino in treinos_filtrados:
                print(treino)
        else:
            print("Nenhum treino corresponde aos filtros aplicados.")

    except Exception as e:
        print(f"Ocorreu um erro ao filtrar os treinos: {e}")

def metas():
    print("Defina suas metas de treino:")

    distancia_meta = float(input("Qual a distância (em km) que você deseja correr por mês? "))

    tempo_meta = float(input("Qual o tempo (em horas) que você deseja correr por semana? "))

    frequencia_meta = int(input("Quantos treinos por semana você quer realizar? "))

    metas_usuario = {
        'distancia': distancia_meta,
        'tempo': tempo_meta,
        'frequencia': frequencia_meta
    }

    print("""
    Suas metas foram definidas da seguinte forma:
    Distância mensal:{metas_usuario['distancia']}km
    Tempo semanal:{metas_usuario['tempo']}horas
    Frequência semanal de treinos:{metas_usuario['frequencia']} treinos
        """)

    try:
        with open('metas.txt', 'a', encoding='utf8') as file:
            file.write("\n--- NOVAS METAS ---\n")
            file.write(f"Distância mensal: {metas_usuario['distancia']} km\n")
            file.write(f"Tempo semanal: {metas_usuario['tempo']} horas\n")
            file.write(f"Frequência semanal de treinos: {metas_usuario['frequencia']} treinos\n")
            file.write("----------------------\n")
        print("Metas salvas com sucesso no arquivo 'metas.txt'!")
    except Exception as e:
        print(f"Ocorreu um erro ao salvar as metas: {e}")

    return metas_usuario

while True: 
    print("""
    ---menu principal---
     1- gerenciamento de treinos
     2- gerenciar tempo de treinos
     3- metas, desafios e sugestões de treinos aleatórios
     4- sair""")
    escolha = int(input("Bem vindo ao RunTrack, escolha de acordo com o menu o que você deseja fazer: "))
    if escolha == 4:
        break
    elif escolha == 1:
        print("""
        ---menu de gerenciamento---
            1- adicionar treino
            2- visualizar treino
            3- atualizar treino
            4- excluir treino""")
        opcao = int(input("Escolha de acordo com o menu o que você deseja fazer: "))
        if opcao == 1:
            nome = input("Digite o nome do treino que você deseja adicionar: ")
            loc = input('Digite a localização do treino: ')
            data = input('Digite a data do treino: ')
            distancia = input("Digite a distância percorrida no treino: ")
            clima = input("Digite o clima do treino: ")
            tempo = input("Digite o tempo do treino (em minutos): ")
            adicionar_treino(nome, loc, data, distancia, clima, tempo)
        elif opcao == 2:
            vizualizar()
        elif opcao == 3:
            update()
        elif opcao == 4:
            deletar()
    elif escolha == 2:
        print("---menu de tempo de treinos---")
        print("1- filtrar treinos")
        filtrar_opcao = int(input("Escolha de acordo com o menu o que você deseja fazer: "))
        if filtrar_opcao == 1:
            tempo_min = float(input("Tempo mínimo (em horas) para o treino: "))
            tempo_max = float(input("Tempo máximo (em horas) para o treino: "))
            distancia_min = float(input("Distância mínima (em km): "))
            distancia_max = float(input("Distância máxima (em km): "))
            filtrar_treinos(tempo_min, tempo_max, distancia_min, distancia_max)
    elif escolha == 3:
        print("---menu de metas/desafios/sugestão de treinos aleatórios---")
        print("1- adicionar metas")
        print("2- registrar desafios")
        print("3- sugestões de treino aleatório")
        decisao = int(input("De acordo com o menu o que você deseja fazer: "))
        if decisao == 1:
            metas_usuario = metas()
            print("\nMetas definidas com sucesso!")
        elif decisao == 2:
            pass
        elif decisao == 3:
            pass
def sugestao_treino():
    arquivo = "treinos.txt"
    usuario = str(input("Digite o nome do usuário para sugerir treinos: "))
    
    try:
        with open(arquivo, "r") as file:
            treinos = file.readlines()
        
        treinos_usuario = [treino for treino in treinos if f"Nome:{usuario}" in treino]
        
        if not treinos_usuario:
            print(f"Não há treinos cadastrados para o usuário {usuario}.")
            return
        
        print(f"\nSugestões de treinos para {usuario}:")
            
        print("""
        \nEscolha a especialidade para o treino:
            1 - Localização
            2 - Distância
            3 - Clima""")
        
        opcao = int(input("Digite a opção (1, 2 ou 3): "))
        
        if opcao == 1:
            especialidade = str(input("Digite a localização desejada: "))
            treinos_filtrados = [treino for treino in treinos_usuario if f"localização:{especialidade}" in treino]
        
        elif opcao == 2:
            especialidade = str(input("Digite a distância desejada: "))
            treinos_filtrados = [treino for treino in treinos_usuario if f"distância:{especialidade}" in treino]
        
        elif opcao == 3:
            especialidade = str(input("Digite o clima desejado: "))
            treinos_filtrados = [treino for treino in treinos_usuario if f"clima:{especialidade}" in treino]
        
        if treinos_filtrados:
            treino_index = len(treinos_filtrados) % len(treinos_filtrados) if len(treinos_filtrados) > 0 else 0
            print(f"Sugestão de treino com a especialidade {especialidade}:")
            print(treinos_filtrados[treino_index].strip())
        else:
            print("Não há treinos encontrados com essa especialidade.")
    
    except FileNotFoundError:
        print("Arquivo não encontrado.")
        
        treino=input("Digite o nome do treino que você deseja vizualizar: ")
        arquivo_treinos = treino + ".txt"
        with open(arquivo_treinos, 'r', encoding='utf8', errors='ignore') as file:
            treinos = file.readlines()
            if treinos:  
                print("--- Treinos Registrados ---")
                for treino in treinos:
                    print(treino.strip())  
            else:
                print("Nenhum treino registrado no arquivo.")
    except FileNotFoundError:
        print("Erro: O arquivo 'arquivo_treinos.txt' não foi encontrado.")
    except Exception as e:
        print(f"Ocorreu um erro: {e}")

 
def escolher(treinos):   
treinos = {
    "1": "40 minutos de corrida, 10 minutos de aquecimento, 20 minutos no pace da prova e 10 minutos de recuperação.",
    "2": "Corrida contínua de 10 km.",
    "3": "Corrida intensa por um período de tempo e depois caminhar.",
    "4": "Corrida de 15 km em um ritmo moderado."
}
<<<<<<< HEAD
    while True:
        print('''Escolha o tipo de treino:
1.⁠ ⁠Intervalado
2.⁠ ⁠Resistência
3.⁠ ⁠Velocidade
4.⁠ ⁠Longa Distância
0.⁠ ⁠Sair''')
        
        opcao = input("Digite o número do treino desejado: ")
        
        if opcao in treinos:
            print(treinos[opcao])
        elif opcao == "0":
            print("Saindo do programa.")
            break
        else:
            print("Opção inválida. Tente novamente.")


    escolher(treinos)

#teste.